# Dify企业版AWS基础设施部署配置文件
# 请根据您的实际情况修改以下配置

# ──────────────── 基础配置 ────────────────
environment    = "test"  # 或 "prod"
aws_region     = "us-east-1"  # 根据您的实际区域修改
aws_account_id = "123456789012"  # 请修改为您的AWS账户ID

# ──────────────── 集群配置 ────────────────
cluster_name = "dify-eks-cluster"
cluster_version = "1.33"
eks_arch       = "amd64"  # 可选: amd64 或 arm64

# 节点组配置（根据环境自动设置）
# test环境：1个节点，m7g.xlarge (4 vCPU, 16 GB RAM)
# prod环境：6个节点，m7g.2xlarge (8 vCPU, 32 GB RAM)

# ──────────────── 网络配置 ────────────────
# 如果使用现有VPC，请取消注释并填写实际值
use_existing_vpc = false
# vpc_id = "vpc-xxxxxxxxx"
# private_subnet_ids = ["subnet-xxxxxxxx", "subnet-yyyyyyyy"]
# public_subnet_ids  = ["subnet-aaaaaaaa", "subnet-bbbbbbbb"]

# 如果创建新VPC，配置以下参数
vpc_cidr = "10.0.0.0/16"
# 可用区自动从当前区域获取，无需手动配置

# ──────────────── 数据库配置 ────────────────
# Aurora PostgreSQL Serverless v2配置
db_engine_version = "17.5"  # Aurora PostgreSQL版本
db_min_capacity = 0.5       # 最小容量（ACU）- 测试环境推荐0.5
db_max_capacity = 4         # 最大容量（ACU）- 测试环境推荐4，生产环境可设置更高
db_backup_retention_period = 7
db_backup_window = "03:00-04:00"

# ElastiCache Redis配置 (Cluster Mode Disabled)
# 根据环境自动配置：
# - test环境：单节点模式，cache.t4g.micro，无故障转移
# - prod环境：主从复制模式，用户配置实例类型，自动故障转移
redis_node_type = "cache.r6g.large"  # 仅用于生产环境
redis_parameter_group_name = "default.redis7"
redis_engine_version = "7.1"  # Redis版本

# OpenSearch配置
opensearch_instance_type = "t3.small.search"
opensearch_instance_count = 1
opensearch_ebs_volume_size = 20
opensearch_engine_version = "OpenSearch_2.19"  # OpenSearch版本

# ──────────────── 存储配置 ────────────────
# S3存储桶配置
s3_bucket_name = "dify-storage"  # 会自动添加随机后缀
s3_versioning_enabled = true

# ECR仓库配置
ecr_repository_name = "dify"
ecr_image_tag_mutability = "MUTABLE"

# ──────────────── ARN格式自动配置 ────────────────
# 所有AWS服务的ARN格式会根据aws_region自动选择：
# - 全球区域（如us-east-1）：arn:aws:...
# - 中国区域（cn-north-1, cn-northwest-1）：arn:aws-cn:...
# 
# 涉及的服务包括：
# - IAM策略ARN：arn:aws(-cn):iam::aws:policy/...
# - OpenSearch ARN：arn:aws(-cn):es:region:account:domain/...
# 无需手动配置，系统会自动处理

# ──────────────── Kubernetes基础组件 ────────────────
# Dify命名空间
dify_namespace = "dify"

# ──────────────── 可选组件 ────────────────
# AWS Load Balancer Controller（推荐启用）
install_aws_load_balancer_controller = true
aws_load_balancer_controller_version = "1.6.2"

# NGINX Ingress Controller（与ALB二选一）
install_nginx_ingress = false
nginx_ingress_version = "4.8.3"

# Cert-Manager（SSL证书管理）
install_cert_manager = true
cert_manager_version = "v1.13.2"

# ──────────────── Helm仓库配置 ────────────────
# Helm仓库地址会根据aws_region自动选择：
# - 全球区域：使用官方仓库（如 https://aws.github.io/eks-charts）
# - 中国区域：使用阿里云镜像仓库（如 https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts）
# 
# 如需自定义仓库地址，可取消注释以下配置：
# custom_helm_repositories = {
#   aws_load_balancer_controller = "https://your-custom-repo.com/charts"
#   nginx_ingress               = "https://your-custom-repo.com/charts"  
#   cert_manager               = "https://your-custom-repo.com/charts"
# }



# ──────────────── 注意事项 ────────────────
# 1. 请修改 aws_account_id 为您的实际AWS账户ID
# 2. 请修改 aws_region 为您希望部署的AWS区域（可用区将自动获取）
# 3. 数据库密码直接在 rds.tf 和 opensearch.tf 文件中设置
# 4. Aurora Serverless v2 使用ACU（Aurora Capacity Units）计费，无需设置实例类型
#    - 1 ACU = 2GB内存 + 相应的CPU和网络容量
#    - 测试环境：0.5-4 ACU，生产环境：1-16 ACU或更高
# 5. Redis配置为Cluster Mode Disabled（非集群模式），根据环境自动配置：
#    - test环境: 单节点模式，cache.t4g.micro，无备份，无故障转移
#    - prod环境: 主从复制模式，用户配置实例类型，自动故障转移，Multi-AZ
# 6. 部署完成后，请按照 additional_docs 中的文档手工部署Dify应用